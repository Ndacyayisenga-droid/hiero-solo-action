name: "Hedera Solo Action"
description: "Run a Hedera based network by using the solo tool"
inputs:
  installMirrorNode:
    description: "Defines if a mirror node should be installed"
    required: true
    default: false
    type: boolean
  hederaVersion:
    description: "Version of Hedera to use. Defaults to latest compatible version."
    required: false
    default: "v0.58.1"
  mirrorNodePort:
    description: "Port for Mirror Node"
    required: false
    default: "8080"
  installRelay:
    description: "Install JSON-RPC-Relay"
    required: false
    default: false
    type: boolean
  relayPort:
    description: "Port for JSON-RPC-Relay"
    required: false
    default: "7546"
outputs:
  accountId:
    description: "Hedera account id for a new account"
    value: ${{ steps.create-account.outputs.accountId }}
  publicKey:
    description: "Hedera public key for the new account"
    value: ${{ steps.create-account.outputs.publicKey }}
  privateKey:
    description: "Hedera private key for the new account"
    value: ${{ steps.create-account.outputs.privateKey }}
runs:
  using: "composite"
  steps:
    - name: Print Inputs
      shell: bash
      run: |
        echo "installMirrorNode: ${{ inputs.installMirrorNode }}"
        echo "is installMirrorNode: ${{ inputs.installMirrorNode == 'true' }}"

    - name: Setup Java
      uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 # v4.2.1
      with:
        distribution: temurin
        java-version: 21

    - name: Setup Node
      uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
      with:
        node-version: 20.18.0

    - name: Install Wget CLI
      shell: bash
      run: sudo apt-get update && sudo apt-get install -y wget

    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Setup Kind
      uses: helm/kind-action@0025e74a8c7512023d06dc019c617aa3cf561fde # v1.10.0
      with:
        version: v0.23.0
        kubectl_version: v1.27.3
        cluster_name: solo-cluster
        wait: 120s

    - name: Install Solo
      shell: bash
      run: npm install -g @hashgraph/solo@0.35.1

    - name: Deploy Solo Test Network
      shell: bash
      env:
        SOLO_CLUSTER_NAME: solo-cluster
        SOLO_NAMESPACE: solo-e2e
        SOLO_DEPLOYMENT: solo-deployment
      run: |
        # Initialize Solo environment
        solo init

        # Create deployment with namespace and explicit context
        solo deployment create --deployment "${SOLO_DEPLOYMENT}" -n "${SOLO_NAMESPACE}" --context "kind-${SOLO_CLUSTER_NAME}" --email "ci@example.com" -q

        # Setup cluster with shared components
        solo cluster setup -c "${SOLO_CLUSTER_NAME}" -s solo-setup

        # Generate keys for node0
        solo node keys --deployment "${SOLO_DEPLOYMENT}" --gossip-keys --tls-keys -i node0

        # Deploy network with node0
        solo network deploy --deployment "${SOLO_DEPLOYMENT}" -i node0 -t "${{ inputs.hederaVersion }}"

        # Setup node0 after deployment
        solo node setup --deployment "${SOLO_DEPLOYMENT}" -i node0 -t "${{ inputs.hederaVersion }}"

        # Start node0
        solo node start --deployment "${SOLO_DEPLOYMENT}" -n "${SOLO_NAMESPACE}" -i node0 -t "${{ inputs.hederaVersion }}"

        # Background port-forward for network access
        kubectl port-forward svc/haproxy-node0-svc -n "${SOLO_NAMESPACE}" 50211:50211 &

    - name: Deploy Mirror Node
      if: ${{ inputs.installMirrorNode == 'true' }}
      shell: bash
      env:
        SOLO_NAMESPACE: solo-e2e
        SOLO_DEPLOYMENT: solo-deployment
      run: |
        solo mirror-node deploy --deployment "${SOLO_DEPLOYMENT}" -n "${SOLO_NAMESPACE}"
        kubectl port-forward svc/fullstack-deployment-hedera-explorer -n "${SOLO_NAMESPACE}" ${{ inputs.mirrorNodePort }}:80 &

    - name: Deploy JSON-RPC-Relay
      if: ${{ inputs.installRelay == 'true' }}
      shell: bash
      env:
        SOLO_NAMESPACE: solo-e2e
        SOLO_DEPLOYMENT: solo-deployment
      run: |
        echo "Installing JSON-RPC-Relay..."
        solo relay deploy --deployment "${SOLO_DEPLOYMENT}" -n "${SOLO_NAMESPACE}"
        echo "JSON-RPC-Relay installed successfully"
        kubectl port-forward svc/json-rpc-relay -n "${SOLO_NAMESPACE}" ${{ inputs.relayPort }}:7546 &

    - name: Create Account
      id: create-account
      shell: bash
      env:
        SOLO_NAMESPACE: solo-e2e
        SOLO_DEPLOYMENT: solo-deployment
        GITHUB_ACTION_PATH: ${{ github.action_path }}
      run: |
        JSON=$(solo account create --deployment "${SOLO_DEPLOYMENT}" -n "${SOLO_NAMESPACE}" | python3 $GITHUB_ACTION_PATH/extractAccountAsJson.py)
        export HEDERA_ACCOUNT_ID=$(echo $JSON | jq -r '.accountId')
        export HEDERA_ACCOUNT_PUBLIC_KEY=$(echo $JSON | jq -r '.publicKey')
        export HEDERA_ACCOUNT_PRIVATE_KEY=$(kubectl get secret account-key-$HEDERA_ACCOUNT_ID -n "${SOLO_NAMESPACE}" -o jsonpath='{.data.privateKey}' | base64 -d | xargs)
        solo account update --deployment "${SOLO_DEPLOYMENT}" -n "${SOLO_NAMESPACE}" --account-id $HEDERA_ACCOUNT_ID --hbar-amount 10000000
        echo "accountId=$HEDERA_ACCOUNT_ID"
        echo "publicKey=$HEDERA_ACCOUNT_PUBLIC_KEY"
        echo "privateKey=$HEDERA_ACCOUNT_PRIVATE_KEY"
        echo "accountId=$HEDERA_ACCOUNT_ID" >> $GITHUB_OUTPUT
        echo "publicKey=$HEDERA_ACCOUNT_PUBLIC_KEY" >> $GITHUB_OUTPUT
        echo "privateKey=$HEDERA_ACCOUNT_PRIVATE_KEY" >> $GITHUB_OUTPUT

branding:
  icon: "share-2"
  color: "black"
