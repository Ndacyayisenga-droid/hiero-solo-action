name: PR Validation

on:
  pull_request:
    branches:
      - main

jobs:
  validate-outputs:
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@v2.12.0
        with:
          egress-policy: audit

      - name: üöÄ Checkout Repo
        uses: actions/checkout@v4.2.2

      - name: ‚öôÔ∏è Setup Hiero Solo
        id: solo
        uses: ./

      - name: ‚úÖ Validate Hiero Solo Outputs
        env:
          ACCOUNT_ID: ${{ steps.solo.outputs.accountId }}
          PRIVATE_KEY: ${{ steps.solo.outputs.privateKey }}
          PUBLIC_KEY: ${{ steps.solo.outputs.publicKey }}
          ECDSA_ACCOUNT_ID: ${{ steps.solo.outputs.ecdsaAccountId }}
          ECDSA_PRIVATE_KEY: ${{ steps.solo.outputs.ecdsaPrivateKey }}
          ECDSA_PUBLIC_KEY: ${{ steps.solo.outputs.ecdsaPublicKey }}
          ED25519_ACCOUNT_ID: ${{ steps.solo.outputs.ed25519AccountId }}
          ED25519_PRIVATE_KEY: ${{ steps.solo.outputs.ed25519PrivateKey }}
          ED25519_PUBLIC_KEY: ${{ steps.solo.outputs.ed25519PublicKey }}
        run: ${GITHUB_WORKSPACE}/scripts/check-accounts.sh

  validate-hbar-amount:
    runs-on: ubuntu-latest
    steps:
      - name: üöÄ Checkout Repo
        uses: actions/checkout@v4.2.2

      - name: ‚öôÔ∏è Setup Hiero Solo with custom HBAR amount
        id: solo
        uses: ./
        with:
          hbarAmount: '100000001'

      - name: ‚úÖ Validate Solo Account HBAR Amount
        env:
          ACCOUNT_ID: ${{ steps.solo.outputs.accountId }}
        run: solo account get --account-id "${ACCOUNT_ID}" --deployment "solo-deployment"

  validate-mirror-node:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mirrorNodeVersion: ["v0.132.0", "v0.133.0"]
    steps:
      - name: üöÄ Checkout Repo
        uses: actions/checkout@v4.2.2

      - name: ‚öôÔ∏è Setup Hiero Solo with MirrorNode
        id: solo
        uses: ./
        with:
          installMirrorNode: true
          mirrorNodeVersion: ${{ matrix.mirrorNodeVersion }}

      - name: ‚úÖ Validate Mirror Node API
        run: |
          sleep 15
          RESPONSE=$(curl -s -w "%{http_code}" -X 'GET' 'http://localhost:5551/api/v1/network/nodes' -H 'accept: application/json' -o response.json)
          if [ "$RESPONSE" -ne 200 ]; then
            echo "‚ùå Mirror Node API failed"
            cat response.json
            exit 1
          fi
          echo "‚úÖ Mirror Node API OK"
          cat response.json

  validate-json-rpc-relay:
    runs-on: ubuntu-latest
    steps:
      - name: üöÄ Checkout Repo
        uses: actions/checkout@v4.2.2

      - name: ‚öôÔ∏è Setup Hiero Solo with JSON-RPC Relay
        id: solo
        uses: ./
        with:
          installRelay: true

      - name: ‚úÖ Validate JSON-RPC Relay
        run: |
          sleep 30
          RESPONSE=$(curl -s -w "%{http_code}" -X POST 'http://localhost:7546' \
            -H 'Content-Type: application/json' \
            -d '{"jsonrpc":"2.0","method":"eth_chainId","params":[],"id":1}' \
            -o response.json)
          if [ "$RESPONSE" -ne 200 ]; then
            echo "‚ùå JSON-RPC failed"
            cat response.json
            exit 1
          fi
          echo "‚úÖ JSON-RPC Relay OK"
          cat response.json

  validate-consensus-node:
    runs-on: ubuntu-latest
    steps:
      - name: üöÄ Checkout Repo
        uses: actions/checkout@v4.2.2

      - name: ‚öôÔ∏è Setup Hiero Solo
        id: solo
        uses: ./

      - name: ‚úÖ Check Solo Consensus Node health
        run: |
          echo "Checking Solo node list"
          solo node list --deployment solo-deployment
          echo "Submitting test transaction"
          solo account transfer --from ${{ steps.solo.outputs.accountId }} \
                                --to ${{ steps.solo.outputs.ecdsaAccountId }} \
                                --hbar-amount 10 \
                                --deployment solo-deployment
          echo "‚úÖ Transaction sent successfully"

  validate-proxies:
    runs-on: ubuntu-latest
    steps:
      - name: üöÄ Checkout Repo
        uses: actions/checkout@v4.2.2

      - name: ‚öôÔ∏è Setup Hiero Solo
        id: solo
        uses: ./

      - name: ‚úÖ Validate HAProxy and gRPC Proxy
        run: |
          echo "Checking HAProxy port..."
          nc -zv localhost 50211 || (echo "‚ùå HAProxy not responding" && exit 1)
          echo "‚úÖ HAProxy OK"

          echo "Checking gRPC proxy port..."
          nc -zv localhost 9998 || (echo "‚ùå gRPC Proxy not responding" && exit 1)
          echo "‚úÖ gRPC Proxy OK"

  validate-invalid-inputs:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: üöÄ Checkout Repo
        uses: actions/checkout@v4.2.2

      - name: ‚öôÔ∏è Setup Hiero Solo with invalid hbarAmount
        id: solo
        uses: ./
        with:
          hbarAmount: "invalid"

      - name: ‚úÖ Expect failure
        run: |
          if [ -f solo-deployment ]; then
            echo "‚ùå Expected failure but deployment succeeded"
            exit 1
          else
            echo "‚úÖ Invalid input correctly failed"
          fi
