name: PR Validation

on:
  pull_request:
    branches:
      - main

jobs:
  validate-hedera-outputs:
    runs-on: ubuntu-latest
    steps:
      - name: üöÄ Checkout Repo
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Setup Hedera Solo
        uses: ./
        id: solo

      - name: ‚úÖ Validate Hedera Solo Outputs
        run: |
          if [ -z "${{ steps.solo.outputs.accountId }}" ]; then
            echo "‚ùå Error: accountId is missing!"
            exit 1
          fi
          if [ -z "${{ steps.solo.outputs.privateKey }}" ]; then
            echo "‚ùå Error: privateKey is missing!"
            exit 1
          fi
          if [ -z "${{ steps.solo.outputs.publicKey }}" ]; then
            echo "‚ùå Error: publicKey is missing!"
            exit 1
          fi
          echo "üéâ All outputs are valid!"

  validate-mirror-node:
    runs-on: ubuntu-latest
    steps:
      - name: üöÄ Checkout Repo
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Setup Hedera Solo with MirrorNode
        uses: ./
        with:
          installMirrorNode: true
        id: solo

      - name: ‚úÖ Validate Mirror Node API
        run: |
          echo "Account ID: ${{ steps.solo.outputs.accountId }}"
          echo "Private Key: ${{ steps.solo.outputs.privateKey }}"
          echo "Public Key: ${{ steps.solo.outputs.publicKey }}"
          
          # Wait for the mirror node to be fully up and running
          sleep 10

          RESPONSE=$(curl -s -w "%{http_code}" -X 'GET' 'http://localhost:8080/api/v1/network/nodes' -H 'accept: application/json' -o response.json)

          if [ "$RESPONSE" -ne 200 ]; then
            echo "‚ùå Error: API request failed with status code $RESPONSE"
            cat response.json
            exit 1
          else
            echo "‚úÖ API request successful"
            cat response.json
          fi

  validate-json-rpc-relay:
      runs-on: ubuntu-latest
      steps:
        - name: üöÄ Checkout Repo
          uses: actions/checkout@v4
        - name: ‚öôÔ∏è Setup Hedera Solo with JSON-RPC Relay
          uses: ./
          with:
            installRelay: true
          id: solo
        - name: ‚úÖ Validate Hedera Solo Outputs
          run: |
            if [ -z "${{ steps.solo.outputs.accountId }}" ]; then
              echo "‚ùå Error: accountId is missing!"
              exit 1
            fi
            if [ -z "${{ steps.solo.outputs.privateKey }}" ]; then
              echo "‚ùå Error: privateKey is missing!"
              exit 1
            fi
            if [ -z "${{ steps.solo.outputs.publicKey }}" ]; then
              echo "‚ùå Error: publicKey is missing!"
              exit 1
            fi
            echo "üéâ All outputs are valid!"
            echo "Account ID: ${{ steps.solo.outputs.accountId }}"
            echo "Public Key: ${{ steps.solo.outputs.publicKey }}"
            echo "Private Key: ${{ steps.solo.outputs.privateKey }}"
        - name: ‚úÖ Validate JSON-RPC Relay
          run: |
            sleep 30
            RESPONSE=$(curl -s -w "%{http_code}" -X POST 'http://localhost:7546' \
              -H 'Content-Type: application/json' \
              -d '{"jsonrpc":"2.0","method":"eth_chainId","params":[],"id":1}' \
              -o response.json)
            if [ "$RESPONSE" -ne 200 ]; then
              echo "‚ùå Error: JSON-RPC request failed with status code $RESPONSE"
              echo "Response body:"
              cat response.json
              echo "Checking if relay service is running:"
              kubectl get pods -n solo | grep relay
              exit 1
            fi
            CHAIN_ID=$(jq -r '.result' response.json)
            if [ -z "$CHAIN_ID" ] || [ "$CHAIN_ID" = "null" ]; then
              echo "‚ùå Error: Invalid or missing chainId in response"
              echo "Response body:"
              cat response.json
              exit 1
            fi
            echo "‚úÖ JSON-RPC Relay request successful"
            echo "Chain ID: $CHAIN_ID"
            cat response.json
